---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Hero from "@/components/landing/Hero.astro";
import Cta from "@/components/global/Cta.astro";
import { Icon } from 'astro-icon/components'
import BlogPostList from "../storyblok/BlogPostList.astro";
import {useStoryblokApi} from "@storyblok/astro";

const storyblokApi = useStoryblokApi();
const { data } = await storyblokApi.get('cdn/stories', {
  version: import.meta.env.DEV ? "draft" : "published",
  content_type: 'blogPost',
})

const posts = data.stories.map(story => {
  return {
    title: story.content.title,
    date: new Date(story.published_at).toLocaleDateString("en-US", {dateStyle: "full"}),
    description: story.content.description,
    image: story.content.image,
    author: story.content.author,
    tags: story.content.tags,
    slug: story.full_slug,
  }
})
const tags = [...new Set(posts.map((post) => post.tags).flat())];


---

<BaseLayout>
  <Hero />
  <section>
    <div class="px-8 md:px-12 mx-auto max-w-7xl py-12 lg:px-32">
      <ol role="list" class="flex flex-wrap gap-3">
        {
          tags.map((tag) => (
            <li class="inline-flex items-center uppercase mx-auto font-medium text-black">
              <a href={`/tags/${tag}`} class="max-w-sm leading-tight">
                <span class="link link-underline link-underline-black text-black pb-2">{tag}</span>
              </a>
            </li>
          ))
        }
      </ol>
      <BlogPostList blokdata={data}/>
    </div>
  </section>
  {data.stories.length > 24 ? <div class="relative flex py-5 items-center px-8 md:px-12 mx-auto max-w-7xl py-12 lg:px-32">
    <div class="flex-grow bg-gray-100 border-t border-gray-400"></div>
    <button class="flex items-center rounded-full border border-gray-300 bg-secondary-50 px-3 py-2 text-center text-sm font-medium text-gray-900 hover:bg-gray-100">
      <Icon name="iconamoon:arrow-down-2"/> <span class="pl-1 pr-1">Mehr anzeigen</span></button>
    <div class="flex-grow border-t border-gray-400"></div>
  </div> : ''}
  <Cta />
</BaseLayout>

<style>

  .link-underline {
    border-bottom-width: 0;
    background-image: linear-gradient(transparent, transparent), linear-gradient(#fff, #fff);
    background-size: 0 3px;
    background-position: 0 100%;
    background-repeat: no-repeat;
    transition: background-size .5s ease-in-out;
  }
  .link-underline-black {
    background-image: linear-gradient(transparent, transparent), linear-gradient(#050505, #050505)
  }
  .link-underline:hover {
    background-size: 100% 3px;
    background-position: 0 100%
  }
</style>